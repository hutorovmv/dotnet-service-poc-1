version: '3.9'

services:
  identityservice:
    build:
      context: .
      dockerfile: Identity.Service/Dockerfile
    ports:
      - "8081:8080" # http
      - "8444:8443" # https
      - "5001:5005" # debug
    profiles:
      - backend
      - identity
    environment:
      - ASPNETCORE_ENVIRONMENT
      - ASPNETCORE__Kestrel__Certificates__Default__Path
      - ASPNETCORE__Kestrel__Certificates__Default__Password
      - ConnectionStrings__TodoListDbConnection
      - Jwt__Issuer
      - Jwt__Audience
      - Jwt__Secret
      - Jwt__ValidityHours
      - Serilog__MinimumLevel__EntityFrameworkCore
      - Serilog__MinimumLevel__Npgsql
      - Serilog__MinimumLevel__Identity.Service
    depends_on:
      - db
    volumes:
      - ./logs/Identity.Service:/app/logs
      - ./certs/https:/app/certs/https:ro
    networks:
      - backend

  todolistservice:
    build:
      context: .
      dockerfile: TodoList.Service/Dockerfile
    ports:
     - "8080:8080" # http
     - "8443:8443" # https
     - "5002:5005" # debug
    profiles:
      - backend
      - todolist
    environment:
      - ASPNETCORE_ENVIRONMENT
      - ASPNETCORE__Kestrel__Certificates__Default__Path
      - ASPNETCORE__Kestrel__Certificates__Default__Password
      - ConnectionStrings__TodoListDbConnection
      - Jwt__Issuer
      - Jwt__Audience
      - Jwt__Secret
      - Jwt__ValidityHours
      - Serilog__MinimumLevel__EntityFrameworkCore
      - Serilog__MinimumLevel__Npgsql
      - Serilog__MinimumLevel__TodoList.Service
    depends_on:
      - db
      - identityservice
    volumes:
      - ./logs/TodoList.Service:/app/logs
      - ./certs/https:/app/certs/https:ro
    networks:
      - backend

  todolistclient:
    build:
      context: .
      dockerfile: todolist-client/Dockerfile
    profiles:
      - frontend
    environment:
      - NODE_ENV
    ports:
      - "4000:4000"
    networks:
      - backend

  db:
    image: postgres:16
    restart: always
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    profiles:
      - backend
      - tools
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    ports:
      - "5050:80"
    profiles:
      - tools
      - pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL
      - PGADMIN_DEFAULT_PASSWORD
    depends_on:
      - db
    networks:
      - backend

volumes:
  pgdata:

networks:
  backend:
    driver: bridge